/// <reference types="react" />
import { UseFormRegisterReturn } from 'react-hook-form';
import { InputSelectProps } from '../../../types/formAndField';
export declare const InputSelect: ({ selectId, id, options, disabled, long, full, error, warning, placeholder, selectPlaceholder, registerSelect, registerInput, defaultValue, selectDefault, }: {
    placeholder?: string | undefined;
    disabledPlaceholder?: boolean | undefined;
    defaultValue?: string | undefined;
    icon?: import("react-icons").IconType | undefined;
    number?: boolean | undefined;
    address?: boolean | undefined;
    long?: boolean | undefined;
    full?: boolean | undefined;
} & import("../../../types/formAndField").PrimitiveElement & {
    defaultValue?: string | undefined;
    value?: string | undefined;
    onChange?: import("react").ChangeEventHandler<HTMLSelectElement> | undefined;
    options: import("../../../types/formAndField").OptionType[];
    containerClassName?: string | undefined;
    long?: boolean | undefined;
    full?: boolean | undefined;
    placeholder?: string | undefined;
} & import("../../../types/formAndField").PrimitiveWrapper & {
    selectId: string;
    selectPlaceholder?: string | undefined;
    selectDefault?: string | undefined;
} & {
    registerSelect?: Record<string, unknown> | UseFormRegisterReturn<string> | undefined;
    registerInput?: Record<string, unknown> | UseFormRegisterReturn<string> | undefined;
}) => JSX.Element;
