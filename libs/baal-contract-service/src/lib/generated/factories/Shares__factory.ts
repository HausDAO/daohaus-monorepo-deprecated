/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type { Shares, SharesInterface } from '../Shares';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'delegator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'fromDelegate',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'toDelegate',
        type: 'address',
      },
    ],
    name: 'DelegateChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousBalance',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newBalance',
        type: 'uint256',
      },
    ],
    name: 'DelegateVotesChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'baal',
    outputs: [
      {
        internalType: 'contract IBaal',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'checkpoints',
    outputs: [
      {
        internalType: 'uint32',
        name: 'fromTimeStamp',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'votes',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
    ],
    name: 'delegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'delegateBySig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'delegates',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'nCheckpoints',
        type: 'uint256',
      },
    ],
    name: 'getCheckpoint',
    outputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'fromTimeStamp',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'votes',
            type: 'uint256',
          },
        ],
        internalType: 'struct Shares.Checkpoint',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'nonces',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'numCheckpoints',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'permit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol_',
        type: 'string',
      },
    ],
    name: 'setUp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: 'success',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604080518082018252600881526754656d706c61746560c01b6020808301918252835180850190945260018452601560fa1b9084015281519192916200005b916003916200016e565b508051620000719060049060208401906200016e565b5050600554610100900460ff169050620000925760055460ff16156200009c565b6200009c62000141565b620001045760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600554610100900460ff1615801562000127576005805461ffff19166101011790555b80156200013a576005805461ff00191690555b5062000251565b600062000159306200015f60201b62000c051760201c565b15905090565b6001600160a01b03163b151590565b8280546200017c9062000214565b90600052602060002090601f016020900481019282620001a05760008555620001eb565b82601f10620001bb57805160ff1916838001178555620001eb565b82800160010185558215620001eb579182015b82811115620001eb578251825591602001919060010190620001ce565b50620001f9929150620001fd565b5090565b5b80821115620001f95760008155600101620001fe565b600181811c908216806200022957607f821691505b602082108114156200024b57634e487b7160e01b600052602260045260246000fd5b50919050565b611f1180620002616000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063587cde1e116100c35780639dc29fac1161007c5780639dc29fac1461034f5780639fd5a6cf14610362578063a457c2d714610375578063a9059cbb14610388578063dd62ed3e1461039b578063e5a2a2a5146103ae57600080fd5b8063587cde1e146102a05780635c19a95c146102e15780636fcfff45146102f457806370a08231146103145780637ecebe001461032757806395d89b411461034757600080fd5b8063313ce56711610115578063313ce5671461020f578063395093511461021e57806340c10f191461023157806347f761f5146102465780634a9e3e131461027a578063562d190d1461028d57600080fd5b806306fdde0314610152578063095ea7b3146101705780630cdfebfa1461019357806318160ddd146101ea57806323b872dd146101fc575b600080fd5b61015a6103c1565b6040516101679190611d56565b60405180910390f35b61018361017e366004611b63565b610453565b6040519015158152602001610167565b6101ce6101a1366004611b63565b60086020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff9093168352602083019190915201610167565b6002545b604051908152602001610167565b61018361020a366004611aaf565b61046b565b60405160128152602001610167565b61018361022c366004611b63565b6104ae565b61024461023f366004611b63565b6104e8565b005b610259610254366004611b63565b61053c565b60408051825163ffffffff1681526020928301519281019290925201610167565b610244610288366004611b8d565b61058e565b61024461029b366004611c17565b61077f565b6102c96102ae366004611a5a565b600a602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610167565b6102446102ef366004611a5a565b610878565b6101ee610302366004611a5a565b60096020526000908152604090205481565b6101ee610322366004611a5a565b610885565b6101ee610335366004611a5a565b600b6020526000908152604090205481565b61015a6108a0565b61024461035d366004611b63565b6108af565b610244610370366004611aeb565b6108e3565b610183610383366004611b63565b610b3a565b610183610396366004611b63565b610bcc565b6101ee6103a9366004611a7c565b610bda565b600c546102c9906001600160a01b031681565b6060600680546103d090611e3e565b80601f01602080910402602001604051908101604052809291908181526020018280546103fc90611e3e565b80156104495780601f1061041e57610100808354040283529160200191610449565b820191906000526020600020905b81548152906001019060200180831161042c57829003601f168201915b5050505050905090565b600033610461818585610c14565b5060019392505050565b6000610478848484610d38565b60006104848533610bda565b905060001981146104a3576104a3853361049e8685611e27565b610c14565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190610461908290869061049e908790611e0f565b600c546001600160a01b0316331461051b5760405162461bcd60e51b815260040161051290611df0565b60405180910390fd5b6002546001600160ff1b0390820111610538576105388282610f00565b5050565b604080518082018252600080825260209182018190526001600160a01b0394909416845260088152818420928452918252918290208251808401909352805463ffffffff168352600101549082015290565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86660066040516105c09190611c7b565b6040519081900381206105da929146903090602001611d32565b60408051808303601f1901815282825280516020918201207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf828501526001600160a01b038a16848401526060840189905260808085018990528351808603909101815260a085019093528251929091019190912090925090600090610666908490849060c001611d17565b60405160208183030381529060405280519060200120905060006106c286868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508693925050610fd99050565b90506001600160a01b0381166106ea5760405162461bcd60e51b815260040161051290611dcc565b6001600160a01b0381166000908152600b6020526040902080546001810190915588146107425760405162461bcd60e51b8152602060048201526006602482015265216e6f6e636560d01b6044820152606401610512565b86158061074e57504287105b61076a5760405162461bcd60e51b815260040161051290611dab565b610774818a610ffd565b505050505050505050565b600554610100900460ff1661079a5760055460ff16156107a2565b6107a26110cf565b6108055760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610512565b600554610100900460ff16158015610827576005805461ffff19166101011790555b600c80546001600160a01b03191633179055825161084c9060069060208601906118d6565b5081516108609060079060208501906118d6565b508015610873576005805461ff00191690555b505050565b6108823382610ffd565b50565b6001600160a01b031660009081526020819052604090205490565b6060600780546103d090611e3e565b600c546001600160a01b031633146108d95760405162461bcd60e51b815260040161051290611df0565b61053882826110e0565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86660066040516109159190611c7b565b60405190819003812061092f929146903090602001611d32565b60408051808303601f1901815282825280516020918201206001600160a01b038b81166000818152600b85528581208054600181019091557f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c995880195909552948601528a1660608501526080840189905260a084019190915260c0830187905292509060e001604051602081830303815290604052805190602001209050600082826040516020016109e3929190611d17565b6040516020818303038152906040528051906020012090506000610a3f86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508693925050610fd99050565b90506001600160a01b038116610a675760405162461bcd60e51b815260040161051290611dcc565b896001600160a01b0316816001600160a01b031614610ab65760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b6044820152606401610512565b50505083421115610ad95760405162461bcd60e51b815260040161051290611dab565b610ae4878787610c14565b856001600160a01b0316876001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610b2991815260200190565b60405180910390a350505050505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610bbf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610512565b6104a38286868403610c14565b600033610461818585610d38565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03163b151590565b6001600160a01b038316610c765760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610512565b6001600160a01b038216610cd75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610512565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d9c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610512565b6001600160a01b038216610dfe5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610512565b610e09838383611228565b6001600160a01b03831660009081526020819052604090205481811015610e815760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610512565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610eb8908490611e0f565b92505081905550826001600160a01b0316846001600160a01b0316600080516020611ebc83398151915284604051610ef291815260200190565b60405180910390a350505050565b6001600160a01b038216610f565760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610512565b610f6260008383611228565b8060026000828254610f749190611e0f565b90915550506001600160a01b03821660009081526020819052604081208054839290610fa1908490611e0f565b90915550506040518181526001600160a01b03831690600090600080516020611ebc8339815191529060200160405180910390a35050565b6000806000610fe885856113bf565b91509150610ff58161142f565b509392505050565b600061100883610885565b1161103f5760405162461bcd60e51b81526020600482015260076024820152662173686172657360c81b6044820152606401610512565b6001600160a01b038083166000908152600a6020526040902080548383166001600160a01b031982161790915516611080818361107b86610885565b6115e5565b816001600160a01b0316816001600160a01b0316846001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4505050565b60006110da30610c05565b15905090565b6001600160a01b0382166111405760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610512565b61114c82600083611228565b6001600160a01b038216600090815260208190526040902054818110156111c05760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610512565b6001600160a01b03831660009081526020819052604081208383039055600280548492906111ef908490611e27565b90915550506040518281526000906001600160a01b03851690600080516020611ebc8339815191529060200160405180910390a3505050565b6001600160a01b038316158061125a5750600c546001600160a01b03163314801561125a57506001600160a01b038216155b806112ea5750600c60009054906101000a90046001600160a01b03166001600160a01b0316631c97cf3f6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112b057600080fd5b505af11580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190611bf5565b155b6113265760405162461bcd60e51b815260206004820152600d60248201526c217472616e7366657261626c6560981b6044820152606401610512565b61132f82610885565b15801561135257506001600160a01b038216600090815260096020526040902054155b801561135e5750600081115b1561138d576001600160a01b0382166000818152600a6020526040902080546001600160a01b03191690911790555b6001600160a01b038084166000908152600a6020526040808220548584168352912054610873929182169116836115e5565b6000808251604114156113f65760208301516040840151606085015160001a6113ea878285856116c7565b94509450505050611428565b82516040141561142057602083015160408401516114158683836117aa565b935093505050611428565b506000905060025b9250929050565b600081600481111561144357611443611e8f565b141561144c5750565b600181600481111561146057611460611e8f565b14156114a95760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610512565b60028160048111156114bd576114bd611e8f565b141561150b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610512565b600381600481111561151f5761151f611e8f565b14156115785760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610512565b600481600481111561158c5761158c611e8f565b14156108825760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610512565b816001600160a01b0316836001600160a01b03161415801561160657508015155b15610873576001600160a01b03831615611667576001600160a01b0383166000908152600960205260408120549081611640576000611652565b61164d856001840361053c565b602001515b9050828103611663868484846117e3565b5050505b6001600160a01b03821615610873576001600160a01b038216600090815260096020526040812054908161169c5760006116ae565b6116a9846001840361053c565b602001515b90508281016116bf858484846117e3565b505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156116f457506000905060036117a1565b8460ff16601b1415801561170c57508460ff16601c14155b1561171d57506000905060046117a1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611771573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661179a576000600192509250506117a1565b9150600090505b94509492505050565b6000806001600160ff1b038316816117c760ff86901c601b611e0f565b90506117d5878288856116c7565b935093505050935093915050565b42831580159061180b57508063ffffffff16611802866001870361053c565b5163ffffffff16145b15611827578161181e866001870361053c565b6020015261188b565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a166000818152600884528681208b825284528681209551865463ffffffff1916951694909417855590516001948501558252600990529190912090850190555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b8280546118e290611e3e565b90600052602060002090601f016020900481019282611904576000855561194a565b82601f1061191d57805160ff191683800117855561194a565b8280016001018555821561194a579182015b8281111561194a57825182559160200191906001019061192f565b5061195692915061195a565b5090565b5b80821115611956576000815560010161195b565b80356001600160a01b038116811461198657600080fd5b919050565b60008083601f84011261199d57600080fd5b50813567ffffffffffffffff8111156119b557600080fd5b60208301915083602082850101111561142857600080fd5b600082601f8301126119de57600080fd5b813567ffffffffffffffff808211156119f9576119f9611ea5565b604051601f8301601f19908116603f01168101908282118183101715611a2157611a21611ea5565b81604052838152866020858801011115611a3a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a6c57600080fd5b611a758261196f565b9392505050565b60008060408385031215611a8f57600080fd5b611a988361196f565b9150611aa66020840161196f565b90509250929050565b600080600060608486031215611ac457600080fd5b611acd8461196f565b9250611adb6020850161196f565b9150604084013590509250925092565b60008060008060008060a08789031215611b0457600080fd5b611b0d8761196f565b9550611b1b6020880161196f565b94506040870135935060608701359250608087013567ffffffffffffffff811115611b4557600080fd5b611b5189828a0161198b565b979a9699509497509295939492505050565b60008060408385031215611b7657600080fd5b611b7f8361196f565b946020939093013593505050565b600080600080600060808688031215611ba557600080fd5b611bae8661196f565b94506020860135935060408601359250606086013567ffffffffffffffff811115611bd857600080fd5b611be48882890161198b565b969995985093965092949392505050565b600060208284031215611c0757600080fd5b81518015158114611a7557600080fd5b60008060408385031215611c2a57600080fd5b823567ffffffffffffffff80821115611c4257600080fd5b611c4e868387016119cd565b93506020850135915080821115611c6457600080fd5b50611c71858286016119cd565b9150509250929050565b600080835481600182811c915080831680611c9757607f831692505b6020808410821415611cb757634e487b7160e01b86526022600452602486fd5b818015611ccb5760018114611cdc57611d09565b60ff19861689528489019650611d09565b60008a81526020902060005b86811015611d015781548b820152908501908301611ce8565b505084890196505b509498975050505050505050565b61190160f01b81526002810192909252602282015260420190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b600060208083528351808285015260005b81811015611d8357858101830151858201604001528201611d67565b81811115611d95576000604083870101525b50601f01601f1916929092016040019392505050565b602080825260079082015266195e1c1a5c995960ca1b604082015260600190565b6020808252600a9082015269217369676e61746f727960b01b604082015260600190565b602080825260059082015264042c2eae8d60db1b604082015260600190565b60008219821115611e2257611e22611e79565b500190565b600082821015611e3957611e39611e79565b500390565b600181811c90821680611e5257607f821691505b60208210811415611e7357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122069c529a4d0634d40efd06e5affacd8c149b92ec8f54e7b8acd85faa9ca9ecfe164736f6c63430008070033';

type SharesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shares__factory extends ContractFactory {
  constructor(...args: SharesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Shares> {
    return super.deploy(overrides || {}) as Promise<Shares>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Shares {
    return super.attach(address) as Shares;
  }
  override connect(signer: Signer): Shares__factory {
    return super.connect(signer) as Shares__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharesInterface {
    return new utils.Interface(_abi) as SharesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shares {
    return new Contract(address, _abi, signerOrProvider) as Shares;
  }
}
