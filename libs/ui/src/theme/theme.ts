import { Theme } from '../types/theming';

import {
  primary,
  primaryDark,
  secondary,
  secondaryDark,
  secondaryDarkA,
  neutral,
  neutralDark,
  utility,
  utilityDark,
  dangerDark,
  warningDark,
  successDark,
  success,
  danger,
  warning,
  info,
  infoDark,
} from './global/colors';

import {
  PrimaryDarkButton,
  SecondaryDarkButton,
  TertiaryDarkButton,
  SuccessDarkButton,
  WarningDarkButton,
  DangerDarkButton,
  PrimaryLightButton,
  SecondaryLightButton,
  TertiaryLightButton,
  SuccessLightButton,
  WarningLightButton,
  DangerLightButton,
} from './atoms/button';
import { FieldTheme, FieldThemeDark } from './atoms/field';
import { AppSwitcherDark, AppSwitcherLight } from './organisms/app-switcher';
import { DropdownDark, DropdownLight } from './molecules/dropdown';
import { orangeDark } from '@radix-ui/colors';

export const defaultDarkTheme: Theme = {
  themeName: 'dark',
  transparent: 'transparent',
  rootBgColor: neutralDark.step1,
  rootFontColor: secondaryDark.step12,
  primary: { ...primaryDark },
  secondary: { ...secondaryDark },
  success: { ...successDark },
  warning: { ...warningDark },
  danger: { ...dangerDark },
  info: { ...infoDark },
  neutral: { ...neutralDark },
  text: {
    primary: secondaryDark.step12,
    placeholder: secondaryDark.step11,
    disabled: neutral.step10,
  },
  link: {
    primary: primaryDark.step10,
  },
  container: {
    bg: secondaryDark.step2,
    border: secondaryDark.step5,
  },
  element: {
    bg: secondaryDark.step3,
    bgHover: secondaryDark.step4,
    bgFocus: secondaryDark.step3,
    bgActive: primaryDark.step3,
    bgDisabled: neutralDark.step2,
    bgActiveHover: primaryDark.step4,
    bgActiveFocus: primaryDark.step3,
    bgActiveDisabled: neutralDark.step2,
    border: secondaryDark.step6,
    borderHover: secondaryDark.step6,
    borderFocus: secondaryDark.step7,
    borderDisabled: neutralDark.step6,
    borderActive: primaryDark.step9,
    borderActiveHover: primaryDark.step9,
    borderActiveFocus: primaryDark.step10,
    borderActiveDisabled: neutralDark.step9,
    indicator: primaryDark.step9,
    indicatorDisabled: neutralDark.step2,
  },
  tint: {
    secondary: secondaryDark.step11,
  },
  // *** ATOMS *** //
  button: {
    primary: PrimaryDarkButton,
    secondary: SecondaryDarkButton,
    tertiary: TertiaryDarkButton,
    success: SuccessDarkButton,
    warning: WarningDarkButton,
    danger: DangerDarkButton,
  },
  card: {
    bg: secondaryDark.step2,
    border: secondaryDark.step5,
    // TODO Delete unused card states
    hoverBg: secondaryDark.step3,
    hoverBorder: secondaryDark.step6,
    focusBg: secondaryDark.step2,
    focusBorder: secondaryDark.step7,
    disabledBg: neutralDark.step2,
    disabledBorder: neutralDark.step5,
    // end unused card states
    successText: utilityDark.successText,
    successBg: utilityDark.successBg,
    successBorder: utilityDark.successBorder,
    warningText: utilityDark.warningText,
    warningBg: utilityDark.warningBg,
    warningBorder: utilityDark.warningBorder,
    errorText: utilityDark.dangerText,
    errorBg: utilityDark.dangerBg,
    errorBorder: utilityDark.dangerBorder,
  },
  field: FieldThemeDark,
  fieldAlert: {
    bg: primaryDark.step3,
    border: primaryDark.step6,
    warningText: orangeDark.orange10,
    warningBg: orangeDark.orange2,
    warningBorder: orangeDark.orange5,
    warningButtonBg: utilityDark.warning,
    warningButtonBorder: utilityDark.warning,
  },
  progress: {
    bg: neutralDark.step8,
  },
  radio: {
    item: {
      bg: secondaryDark.step3,
      border: secondaryDark.step6,
      hoverBg: secondaryDark.step4,
      hoverBorder: secondaryDark.step6,
      focusBg: secondaryDark.step3,
      focusBorder: secondaryDark.step7,
      disabledBg: neutralDark.step2,
      disabledBorder: neutralDark.step6,
      activeBg: primaryDark.step9,
      activeBorder: primaryDark.step9,
      activeHoverBg: primaryDark.step10,
      activeHoverBorder: primaryDark.step10,
      activeFocusBg: primaryDark.step9,
      activeFocusBorder: primaryDark.step11,
      activeDisabledBg: neutralDark.step9,
      activeDisabledBorder: neutralDark.step9,
    },
    indicator: {
      bg: primaryDark.step3,
      disabledBg: neutralDark.step1,
    },
  },
  select: {
    bg: secondaryDark.step3,
    text: secondaryDark.step11,
    borderColor: utilityDark.transparent,
  },
  spinner: {
    topColor: primaryDark.step9,
    bottomColor: primaryDark.step4,
  },
  switch: {
    bar: {
      bg: secondaryDark.step6,
      activeBg: primaryDark.step6,
      disabledBg: neutralDark.step6,
      activeDisabledBg: neutralDark.step6,
    },
    thumb: {
      bg: secondaryDark.step9,
      border: secondaryDark.step9,
      hoverBg: secondaryDark.step10,
      hoverBorder: secondaryDark.step10,
      focusBg: secondaryDark.step9,
      focusBorder: secondaryDark.step11,
      disabledBg: neutralDark.step9,
      disabledBorder: neutralDark.step9,
      activeBg: primaryDark.step9,
      activeBorder: primaryDark.step9,
      activeHoverBg: primaryDark.step10,
      activeHoverBorder: primaryDark.step10,
      activeFocusBg: primaryDark.step9,
      activeFocusBorder: primaryDark.step11,
      activeDisabledBg: neutralDark.step9,
      activeDisabledBorder: neutralDark.step9,
    },
  },
  // *** MOLECULES *** //
  collapsibleCard: {
    text: primaryDark.step11,
    hoverText: primaryDark.step10,
    focusText: primaryDark.step12,
    // bgInnerCard: secondaryDark.step5,
    bgInnerCard: secondaryDarkA.step3,
    borderInnerCard: secondaryDark.step5,
  },
  dropdown: DropdownDark,
  dialog: {
    bg: secondaryDark.step2,
    color: secondaryDark.step12,
  },
  tooltip: {
    bg: secondaryDark.step6,
  },
  toast: {
    bg: secondaryDark.step3,
    border: secondaryDark.step5,
    successText: utilityDark.successText,
    successBg: utilityDark.successBg,
    successBorder: utilityDark.successBorder,
    warningText: utilityDark.warningText,
    warningBg: utilityDark.warningBg,
    warningBorder: utilityDark.warningBorder,
    errorText: utilityDark.dangerText,
    errorBg: utilityDark.dangerBg,
    errorBorder: utilityDark.dangerBorder,
    icon: {
      default: utilityDark.success,
      success: utilityDark.success,
      warning: utilityDark.warning,
      error: utilityDark.danger,
    },
  },
  // *** ORGANISMS *** //
  navTabs: {
    bg: secondaryDark.step2,
    navLinkColor: secondaryDark.step9,
    navLinkHoverColor: secondaryDark.step10,
    navLinkSelected: secondaryDark.step12,
    navLinkDropdownText: secondaryDark.step12,
    hoverNavLinkDropdownBg: secondaryDark.step4,
    hoverNavLinkDropdownBorder: secondaryDark.step8,
    activeNavLinkDropdownBg: secondaryDark.step9,
    activeNavLinkDropdownBorder: secondaryDark.step6,
  },
  appSwitcher: AppSwitcherDark,
};

export const defaultLightTheme: Theme = {
  themeName: 'light',
  transparent: 'transparent',
  rootBgColor: secondary.step1,
  rootFontColor: secondary.step12,
  primary: { ...primary },
  secondary: { ...secondary },
  success: { ...success },
  warning: { ...warning },
  danger: { ...danger },
  info: { ...info },
  neutral: { ...neutral },
  text: {
    primary: secondary.step12,
    placeholder: secondary.step11,
    disabled: neutral.step10,
  },
  link: {
    primary: primary.step10,
  },
  container: {
    bg: secondary.step2,
    border: secondary.step5,
  },
  element: {
    bg: secondary.step3,
    bgHover: secondary.step4,
    bgFocus: secondary.step3,
    bgActive: primary.step3,
    bgDisabled: neutral.step2,
    bgActiveHover: primary.step4,
    bgActiveFocus: primary.step3,
    bgActiveDisabled: neutral.step2,
    border: secondary.step6,
    borderHover: secondary.step6,
    borderFocus: secondary.step7,
    borderDisabled: neutral.step6,
    borderActive: primary.step9,
    borderActiveHover: primary.step9,
    borderActiveFocus: primary.step10,
    borderActiveDisabled: neutral.step9,
    indicator: primary.step9,
    indicatorDisabled: neutral.step2,
  },
  tint: {
    secondary: secondary.step11,
  },
  // *** ATOMS *** //
  button: {
    primary: PrimaryLightButton,
    secondary: SecondaryLightButton,
    tertiary: TertiaryLightButton,
    success: SuccessLightButton,
    warning: WarningLightButton,
    danger: DangerLightButton,
  },
  card: {
    bg: secondary.step2,
    border: secondary.step5,
    hoverBg: secondary.step3,
    hoverBorder: secondary.step6,
    focusBg: secondary.step2,
    focusBorder: secondary.step7,
    disabledBg: neutral.step2,
    disabledBorder: neutral.step5,
    successText: utility.successText,
    successBg: utility.successBg,
    successBorder: utility.successBorder,
    warningText: utility.warningText,
    warningBg: utility.warningBg,
    warningBorder: utility.warningBorder,
    errorText: utility.dangerText,
    errorBg: utility.dangerBg,
    errorBorder: utility.dangerBorder,
  },
  field: FieldTheme,
  fieldAlert: {
    bg: primary.step3,
    border: primary.step6,
    warningText: orangeDark.orange10,
    warningBg: orangeDark.orange2,
    warningBorder: orangeDark.orange5,
    warningButtonBg: utilityDark.warning,
    warningButtonBorder: utilityDark.warning,
  },
  progress: {
    bg: neutral.step10,
  },
  radio: {
    item: {
      bg: secondary.step3,
      border: secondary.step6,
      hoverBg: secondary.step4,
      hoverBorder: secondary.step6,
      focusBg: secondary.step3,
      focusBorder: secondary.step7,
      disabledBg: neutral.step2,
      disabledBorder: neutral.step6,
      activeBg: primaryDark.step9,
      activeBorder: primaryDark.step9,
      activeHoverBg: primaryDark.step10,
      activeHoverBorder: primaryDark.step10,
      activeFocusBg: primaryDark.step9,
      activeFocusBorder: primaryDark.step11,
      activeDisabledBg: neutral.step9,
      activeDisabledBorder: neutral.step9,
    },
    indicator: {
      bg: primaryDark.step3,
      disabledBg: neutral.step1,
    },
  },
  select: {
    bg: secondary.step3,
    text: secondary.step11,
    borderColor: utility.transparent,
  },
  spinner: {
    topColor: primaryDark.step9,
    bottomColor: primaryDark.step4,
  },
  switch: {
    bar: {
      bg: secondary.step6,
      activeBg: primaryDark.step6,
      disabledBg: neutral.step6,
      activeDisabledBg: neutral.step6,
    },
    thumb: {
      bg: secondary.step9,
      border: secondary.step9,
      hoverBg: secondary.step10,
      hoverBorder: secondary.step10,
      focusBg: secondary.step9,
      focusBorder: secondary.step11,
      disabledBg: neutral.step9,
      disabledBorder: neutral.step9,
      activeBg: primaryDark.step9,
      activeBorder: primaryDark.step9,
      activeHoverBg: primaryDark.step10,
      activeHoverBorder: primaryDark.step10,
      activeFocusBg: primaryDark.step9,
      activeFocusBorder: primaryDark.step11,
      activeDisabledBg: neutral.step9,
      activeDisabledBorder: neutral.step9,
    },
  },
  // *** MOLECULES *** //
  collapsibleCard: {
    text: primary.step11,
    hoverText: primary.step10,
    focusText: primary.step12,
    bgInnerCard: secondary.step5,
    borderInnerCard: secondary.step6,
  },
  dropdown: DropdownLight,
  dialog: {
    bg: secondary.step2,
    color: secondary.step12,
  },
  tooltip: {
    bg: secondary.step6,
  },
  toast: {
    bg: secondary.step3,
    border: secondary.step5,
    successText: utility.successText,
    successBg: utility.successBg,
    successBorder: utility.successBorder,
    warningText: utility.warningText,
    warningBg: utility.warningBg,
    warningBorder: utility.warningBorder,
    errorText: utility.dangerText,
    errorBg: utility.dangerBg,
    errorBorder: utility.dangerBorder,
    icon: {
      default: utility.success,
      success: utility.success,
      warning: utility.warning,
      error: utility.danger,
    },
  },
  // *** ORGANISMS *** //
  navTabs: {
    bg: secondary.step2,
    navLinkColor: secondary.step9,
    navLinkHoverColor: secondary.step10,
    navLinkSelected: secondary.step12,
    navLinkDropdownText: secondary.step12,
    hoverNavLinkDropdownBg: secondary.step4,
    hoverNavLinkDropdownBorder: secondary.step8,
    activeNavLinkDropdownBg: secondary.step9,
    activeNavLinkDropdownBorder: secondary.step6,
  },
  appSwitcher: AppSwitcherLight,
};
