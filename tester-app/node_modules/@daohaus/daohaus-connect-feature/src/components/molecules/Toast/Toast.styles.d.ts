/// <reference types="react" />
import * as ToastPrimitive from '@radix-ui/react-toast';
import { ToastType } from '../../../types/toast.types';
export declare const ToastProvider: import("react").FC<ToastPrimitive.ToastProviderProps>;
export declare const ToastTitle: import("react").ForwardRefExoticComponent<ToastPrimitive.ToastTitleProps & import("react").RefAttributes<HTMLDivElement>>;
export declare const ToastDescription: import("react").ForwardRefExoticComponent<ToastPrimitive.ToastDescriptionProps & import("react").RefAttributes<HTMLDivElement>>;
export declare const ToastClose: import("react").ForwardRefExoticComponent<ToastPrimitive.ToastCloseProps & import("react").RefAttributes<HTMLButtonElement>>;
export declare const ToastViewport: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<ToastPrimitive.ToastViewportProps & import("react").RefAttributes<HTMLOListElement>>, import("styled-components").DefaultTheme, {}, never>;
export declare const ToastRoot: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<ToastPrimitive.ToastProps & import("react").RefAttributes<HTMLLIElement>>, import("styled-components").DefaultTheme, {}, never>;
export declare const ToastHeaderContainer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const ToastIcon: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, {
    iconType: ToastType;
}, never>;
export declare const ToastCopyContainer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const ToastAction: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<ToastPrimitive.ToastActionProps & import("react").RefAttributes<HTMLButtonElement>>, import("styled-components").DefaultTheme, {}, never>;
export declare const CloseIcon: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
